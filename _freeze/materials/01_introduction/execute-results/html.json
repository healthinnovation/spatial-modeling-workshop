{
  "hash": "7b757d179212b7337c7255dd864ea6fd",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:2.35em;'>How to Create Engaging and<br>Complex Visualizations in R</span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Cédric Scherer</a></b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n# Welcome!\n\n##  {background-image=\"img/intro/hello-team.png\" background-position=\"center\" background-size=\"65%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/intro/team-1.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/portfolio/portfolio_cards.png\" background-position=\"center\" background-size=\"80%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/portfolio/projects-science.png\" background-position=\"center\" background-size=\"80%\" background-color=\"#606060\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/portfolio/projects-clients.png\" background-position=\"center\" background-size=\"80%\" background-color=\"#606060\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/portfolio/projects-personal.png\" background-position=\"center\" background-size=\"80%\" background-color=\"#606060\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/intro/team-2.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/intro/team-3.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/portfolio/thomas_artwork.png\" background-position=\"center\" background-size=\"60%\"}\n\n##  {background-image=\"img/intro/team-4.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/portfolio/ahmadou_african_patterns.png\" background-position=\"center\" background-size=\"38%\"}\n\n##  {background-image=\"img/intro/team-5.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/portfolio/marco_germany_heating_up.png\" background-position=\"center\" background-size=\"38%\"}\n\n##  {background-image=\"img/intro/team.png\" background-position=\"center\" background-size=\"75%\"}\n\n##  {background-image=\"img/portfolio/hassan_periodic_table.png\" background-position=\"center\" background-size=\"74%\"}\n\n##  {background-image=\"img/intro/hello-course.png\" background-position=\"center\" background-size=\"65%\"}\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n## Conversation Starters\n\n-   What's your name?\n-   Where do you feel home?\n-   When did you use R for the first time?\n-   What's your favorite animal / plant / color / typeface?\n-   Whom would you like to meet during the rstudio::conf?\n-   Which R package are you looking forward to try?\n\n\n## Announcements\n\n#### WiFi\n-   Username: conf22\n-   Password: together!<br><br>\n\n#### Course Materials\n-   Webpage: [rstudio-conf-2022.github.io/ggplot2-graphic-design](https://www.rstudio-conf-2022.github.io/ggplot2-graphic-design)\n-   Rstudio Cloud: [rstudio.cloud/spaces/235465](https://www.rstudio.cloud/spaces/235465)\n\n\n## Announcements\n\n::: incremental\n-   gender neutral bathrooms by the National Harbor rooms\n-   meditation room is located at National Harbor 9, open 8am-5pm, Monday-Thursday \n  -   there is also has a dedicated room behind the reception\n-   lactation room is located at Potomac Dressing Room, open 8am-5pm, Monday-Thursday.\n-   participants with red lanyards wish to be not photographed, please note everyone's lanyard colors before taking a photo\n-   The Code of Conduct and COVID policies can be found at [rstudio.com/conference/2022/2022-conf-code-of-conduct](https://www.rstudio.com/conference/2022/2022-conf-code-of-conduct),<br>please review them carefully\n:::\n\n## Communication Strategy\n\n<br>\n\n::: incremental\n-   <b style='color:#28a87d;'>Green sticky note </b>--- I am done with the exercise<br><br>\n-   <b style='color:#b82ca1;'>Pink sticky note </b>--- I need help or support<br><br>\n-   You can ask questions / comment at any time during the course.\n-   Please avoid questions during the breaks to give us a chance to recover and reflect.\n-   Team up with your neighbors for exercises --- and lunch!\n-   We will collect feedback twice during the day (more later).\n:::\n\n\n# Introduction\n\n##\n\n::: footer\n[{ggplot2} package description](https://ggplot2.tidyverse.org/)\n:::\n\n![](img/intro/ggplot2.png){fig-align=\"center\" fig-alt=\"The ggplot2 hex logo.\"}\n\n<br>\n\n<b style='font-size:30pt;'><code>{ggplot2}</code> is a system for declaratively creating graphics,<br>based on \"The Grammar of Graphics\" (Wilkinson, 2005).</b>\n\n::: fragment\n[You provide the data, tell <code>{ggplot2}</code> how to ]{style=\"font-size:24pt;\"}[map variables to aesthetics,]{.circle-highlight}<br>what graphical primitives to use, and it takes care of the details.\n:::\n\n## Advantages of {ggplot2}\n\n::: incremental\n-   consistent underlying \"grammar of graphics\" (Wilkinson 2005)\\\n-   very flexible, layered plot specification\\\n-   theme system for polishing plot appearance\\\n-   lots of additional functionality thanks to extensions\\\n-   active and helpful community\n:::\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/intro/ah_ggplot2_exploratory.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of explorative plotting with ggplot2.\"}\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![ggplot2 Examples featured on ggplot2.tidyverse.org](img/intro/basic_ggplots.png){fig-align=\"center\" fig-alt=\"A collection of the versatility of ggplot2 to create basic graphs. All of them use the default grey ggplot2 theme.\"}\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/intro/ah_ggplot2_masterpiece.png){fig-align=\"center\" fig-alt=\"Allison Horsts monster illustration of building  data masterpiece ith ggplot2 featuring a little Picasso monster :)\"}\n\n##  {background-image=\"img/intro/evol-ggplot-1.gif\" background-position=\"center\" background-size=\"65%\"}\n\n::: footer\n:::\n\n# The {ggplot2} Showcase\n\n------------------------------------------------------------------------\n\n![Collection of Graphics from the [BBC R Cookbook](https://bbc.github.io/rcookbook/)](img/showcase/bbc-gallery.png){fig-align=\"center\" fig-alt=\"A multi-plot panel of various data visualizations created by the BBC teams.\"}\n\n------------------------------------------------------------------------\n\n![Contribution to [#TidyTuesday Week 2020/31](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_31)](img/showcase/2020_31_PalmerPenguins.png){fig-align=\"center\" fig-size=\"80%\" fig-alt=\"A colorful and annotated scatterplot and a custom raincloud plot showing various bill measures of Palmer penguins.\"}\n\n------------------------------------------------------------------------\n\n![My reinterpreted [The Economist graphic](https://www.economist.com/graphic-detail/2019/09/28/why-are-some-languages-spoken-faster-than-others)](img/showcase/speech_speed_language_families_raincloud.png){fig-align=\"center\" fig-alt=\"The raincloud chart showing the distributions of normalized speech rates (dark pink) and information rates (dark lime green) across language families.\"}\n\n------------------------------------------------------------------------\n\n![[\"European Elections\"](https://twitter.com/spren9er/status/1138000009306234880) by Torsten Sprenger](img/showcase/europe_sprengler.jpeg){fig-align=\"center\" fig-alt=\"A circular tree showing the German winner parties for each district & state of the 2019 European Parliament Election.\"}\n\n------------------------------------------------------------------------\n\n![Contribution to [#TidyTuesday Week 2020/08](https://github.com/Z3tt/TidyTuesday/tree/main/plots/2020_08)](img/showcase/20200307_TT_2020_08_CarbonFoodprint_alt.png){fig-align=\"center\" fig-alt=\"Two circular hierarchical bar plots showing the carbon footprint 2018 for food consumption and CO2 per continent and country.\"}\n\n------------------------------------------------------------------------\n\n![Contribution to the [#SWDchallenge \"Small Multiples\"](https://www.storytellingwithdata.com/blog/2020/1/6/swdchallenge-small-multiples)](img/showcase/SWD_2020_01_SmallMultiples_grey.png){fig-align=\"center\" fig-alt=\"A facet of shots and goals of the Bundesliga football clubs in the season 2019/20.\"}\n\n------------------------------------------------------------------------\n\n![Contribution to the [#TidyTuesday Week 2021/15 x #30DayChartChallenge 2021 by Jake Kaupp](https://twitter.com/jakekaupp/status/1379606812849270784?s=20)](img/showcase/jake_30dcc_tt_trees.png){fig-align=\"center\" fig-alt=\"A facet of trees over time with less and less leaves as time passes by; each leave represents one billion treees.\"}\n\n------------------------------------------------------------------------\n\n![[Moon Charts as a Tile Grid Map](https://github.com/z3tt/grid-btw-wahlkreise-constituencies) showing the 2nd Vote Results from the German Election 2021](img/showcase/btw21_tile_grid_moon_second_de.png){fig-align=\"center\" fig-alt=\"A grid map using moon charts for all 297 electoral districts which show the share of the wnning party in second votesc during the German election in 2021.\"}\n\n------------------------------------------------------------------------\n\n![[#TidyTuesday Contribution by Jack Davison](github.com/jack-davison/tidytuesday)](img/showcase/jack_davison.png){fig-align=\"center\" fig-alt=\"A gridded map of Europe showing horizontal stacked bars of energy production per country over time (each bar represents share among one year from 2016 to 2018).\"}\n\n------------------------------------------------------------------------\n\n![Our Winning Contribution to the [BES MoveMap Contest](https://besmovesig.wordpress.com/2021/02/25/mapping-movements-the-art-and-the-science-we-have-the-winners/)](img/showcase/20210131_BES_CheetahMap_rcarto.png){fig-align=\"center\" fig-alt=\"A spatial map of cheetah movement and their hotspot behaviour in Namibia.\"}\n\n------------------------------------------------------------------------\n\n![[Bivariate Choropleth x Hillshade Map](timogrossenbacher.ch/2019/04/bivariate-maps-with-ggplot2-and-sf) by Timo Gossenbacher](img/showcase/swiss_map.png){fig-align=\"center\" fig-alt=\"A spatial map of income and inequality shown with a bivariate color palette; alpine regions have a hillshading effect.\"}\n\n------------------------------------------------------------------------\n\n![Pixel Art by [Georgios Karamanis](https://karaman.is/)](img/showcase/bob-ross-pixel-art-georgios.png){fig-align=\"center\" fig-alt=\"A set of small multiples using pixelated encodings of certain elements in Bob Ross' paintings.\"}\n\n------------------------------------------------------------------------\n\n![Generative Art by [Thomas Lin Pedersen](https://www.data-imaginist.com/art)](img/showcase/genart.png){fig-align=\"center\" fig-alt=\"Two artworks by Thomas Pedersen, completely generated in R with ggplot2 (and pure magic).\"}\n\n# A Motivational Example\n\n\n\n\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic_492e95218e4c72bb21e8144aac7075e6'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-basic-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic_d61d51dd38833ce3a7182bb64f6557ec'}\n\n```{.r .cell-code}\n## scatter plot of plot bikes$count versus bikes$count\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(size = 2.2)\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-color_daddb0bfa6c404034446fb1a16224623'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-basic-color-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-color_28d244cddb800456b44270979db071d0'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  ## colored, semi-transparent points\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  )\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-smooth_0d718ebe8a314fa8a695f9daaa679708'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-basic-smooth-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-smooth_5d6aa11c3c4f990c2c818db56c3285a4'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  ) +\n  ## add a linear fitting for each time of the day\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  )\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-facet_2dec7ac1562a302994530a0e8d2474bf'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-basic-facet-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-facet_7cda0e0345139c018c3d4042a668adac'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  ## create small multiples of time of day versus workday\n  facet_grid(day_night ~ is_workday)\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-facet-space_37787ea0ed4e61a54eb4d53e97004389'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-basic-facet-space-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-basic-facet-space_fa77ebcca2a2fda23addb18a65e31482'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  ## create free-ranging, proportionally sized small multiples\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\", space = \"free_y\"\n  )\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-styling_292fffcc52cd9d0a1acd7b0343c949e4'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-styling-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-styling_52f5569897fd2f9c2fd24a18d74e3bd4'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\", space = \"free_y\"\n  ) +\n  ## add labels + titles\n  labs(\n    x = \"Feels-Like Temperature\", y = NULL,\n    caption = \"Data: TfL (Transport for London), Jan 2015 — Dec 2016\",\n    title = \"Reported bike rents versus feels-like temperature in London per time of day, period, and season.\"\n  )\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-styling-2_1884b6c82b75f2672accab081a534ec0'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-styling-2-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-styling-2_6e6d475fdb537723cef9ac6ae4dcb22a'}\n\n```{.r .cell-code}\nggplot(bikes, aes(temp_feel, count)) +\n  geom_point(\n    aes(color = season),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\", space = \"free_y\"\n  ) +\n  ## add custom colors + legend styling\n  scale_color_manual(\n    values = c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\"), name = \"Season:\",\n    guide = guide_legend(override.aes = list(size = 5))\n  ) +\n  labs(\n    x = \"Feels-Like Temperature\", y = NULL,\n    caption = \"Data: TfL (Transport for London), Jan 2015 — Dec 2016\",\n    title = \"Reported bike rents versus feels-like temperature in London per time of day, period, and season.\"\n  ) +\n  ## use different theme and typeface\n  theme_light(base_size = 18, base_family = \"Cabinet Grotesk\")\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-advanced_9e17e2f0fff755a9fd35221876e70c27'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-advanced-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-advanced_bde03e4652b31300d367c6ed10c9f5b7'}\n\n```{.r .cell-code}\n## coding for facet strip text\ncodes <- c(\n  workday = \"Workday\",\n  weekend_or_holiday = \"Weekend or Holiday\"\n)\n\nggplot(bikes, aes(temp_feel, count)) +\n  ## format seasons\n  geom_point(\n    aes(color = forcats::fct_relabel(season, stringr::str_to_title)),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\", color = \"black\"\n  ) +\n  ## format facet strip text\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\", space = \"free_y\",\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = codes\n    )\n  ) +\n  ## customize x axis\n  scale_x_continuous(\n    expand = c(.02, .02),\n    breaks = 0:6*5, labels = function(x) paste0(x, \"°C\")\n  ) +\n  ## customize y axis\n  scale_y_continuous(\n    expand = c(.1, .1), limits = c(0, NA),\n    breaks = 0:5*10000, labels = scales::comma_format()\n  ) +\n  scale_color_manual(\n    values = c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\"), name = NULL,\n    guide = guide_legend(override.aes = list(size = 5))\n  ) +\n  labs(\n    x = \"Feels-Like Temperature\", y = NULL,\n    caption = \"Data: TfL (Transport for London), Jan 2015 — Dec 2016\",\n    title = \"Reported bike rents versus feels-like temperature in London per time of day, period, and season.\"\n  ) +\n  theme_light(\n    base_size = 18, base_family = \"Cabinet Grotesk\"\n  ) +\n  ## theme adjustments\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.title = element_text(face = \"bold\"),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n:::\n\n:::\n\n------------------------------------------------------------------------\n\n::: panel-tabset\n### Graphic\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-advanced-2_9b384bee52210c6c2302da6867ce2ca7'}\n::: {.cell-output-display}\n![](01_introduction_files/figure-revealjs/example-motivation-advanced-2-1.png){width=2800}\n:::\n:::\n\n\n### Code\n\n\n::: {.cell hash='01_introduction_cache/revealjs/example-motivation-advanced-2_e0cd72d9808167f6c86667d3c700376a'}\n\n```{.r .cell-code}\ncodes <- c(\n  workday = \"Workday\",\n  weekend_or_holiday = \"Weekend or Holiday\"\n)\n\nggplot(bikes, aes(temp_feel, count)) +\n  ## point outline\n  geom_point(\n    color = \"black\", fill = \"white\",\n    shape = 21, size = 2.8\n  ) +\n  ## opaque point background\n  geom_point(\n    color = \"white\", size = 2.2\n  ) +\n  ## colored, semi-transparent points\n  geom_point(\n    aes(color = forcats::fct_relabel(season, stringr::str_to_title)),\n    size = 2.2, alpha = .55\n  ) +\n  geom_smooth(\n    aes(group = day_night), method = \"lm\", color = \"black\"\n  ) +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\", space = \"free_y\",\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = codes\n    )\n  ) +\n  scale_x_continuous(\n    expand = c(.02, .02),\n    breaks = 0:6*5, labels = function(x) paste0(x, \"°C\")\n  ) +\n  scale_y_continuous(\n    expand = c(.1, .1), limits = c(0, NA),\n    breaks = 0:5*10000, labels = scales::comma_format()\n  ) +\n  scale_color_manual(\n    values = c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\"), name = NULL,\n    guide = guide_legend(override.aes = list(size = 5))\n  ) +\n  labs(\n    x = \"Feels-Like Temperature\", y = NULL,\n    caption = \"Data: TfL (Transport for London), Jan 2015 — Dec 2016\",\n    title = \"Reported bike rents versus feels-like temperature in London per time of day, period, and season.\"\n  ) +\n  theme_light(\n    base_size = 18, base_family = \"Cabinet Grotesk\"\n  ) +\n  ## more theme adjustments\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.title = element_text(face = \"bold\", size = rel(1.3)),\n    axis.text = element_text(family = \"Tabular\"),\n    axis.title.x = element_text(hjust = 0, color = \"grey30\", margin = margin(t = 12)),\n    strip.text = element_text(face = \"bold\" , size = rel(1.15)),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.spacing = unit(1.2, \"lines\"),\n    legend.position = \"top\",\n    legend.text = element_text(size = rel(1)),\n    ## for fitting my slide background\n    legend.key = element_rect(color = \"#f8f8f8\", fill = \"#f8f8f8\"),\n    legend.background = element_rect(color = \"#f8f8f8\", fill = \"#f8f8f8\"),\n    plot.background = element_rect(color = \"#f8f8f8\", fill = \"#f8f8f8\")\n  )\n```\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}