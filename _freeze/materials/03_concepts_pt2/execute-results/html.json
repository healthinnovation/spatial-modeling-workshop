{
  "hash": "ac8b872710477baffb6881b0e15128ef",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:1.75em;line-height:1.1;'>Concepts of the <code>{ggplot2}</code> Package Pt. 2:<br><span style='font-weight:500;'>Facets, Scales, and Coordinate Systems</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Cédric Scherer</a></b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 1\n    dpi: 200\nexecute:\n  freeze: auto\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)\n\ninvisible(Sys.setlocale(\"LC_TIME\", \"C\"))\n```\n:::\n\n\n# Facets\n\n## Facets\n\n<br>\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>= split variables to multiple panels</b><br><br>\n\n::: fragment\nFacets are also known as:\n\n-   small multiples\n-   trellis graphs\n-   lattice plots\n-   conditioning\n:::\n\n------------------------------------------------------------------------\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-types-wrap-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-types-grid-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n## Setup\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7,8,9,10|12\"}\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .3,\n    guide = \"none\"\n  )\n\ng\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-setup-1.png){width=1000}\n:::\n:::\n\n\n## Wrapped Facets\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2,4|3\"}\ng +\n  facet_wrap(\n    vars(day_night)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-1.png){width=1000}\n:::\n:::\n\n\n## Wrapped Facets\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  facet_wrap(\n    ~ day_night\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-circumflex-1.png){width=1000}\n:::\n:::\n\n\n## Facet Multiple Variables\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  facet_wrap(\n    ~ is_workday + day_night\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-multiple-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Cols + Rows\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-options-ncol-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Free Scaling\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-options-scales-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Free Scaling\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free_y\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-options-freey-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Switch Labels\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    switch = \"x\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-wrap-options-switch-1.png){width=1000}\n:::\n:::\n\n\n## Gridded Facets\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,5|3,4\"}\ng +\n  facet_grid(\n    rows = vars(day_night),\n    cols = vars(is_workday)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-1.png){width=1000}\n:::\n:::\n\n\n## Gridded Facets\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  facet_grid(\n    day_night ~ is_workday\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-circumflex-1.png){width=1000}\n:::\n:::\n\n\n## Facet Multiple Variables\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  facet_grid(\n    day_night ~ is_workday + season\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-multiple-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Free Scaling\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-options-scales-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Switch Labels\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\",\n    switch = \"y\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-options-switch-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Proportional Spacing\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4,5|5\"}\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\",\n    space = \"free\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-options-space-1.png){width=1000}\n:::\n:::\n\n\n## Facet Options: Proportional Spacing\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4,5\"}\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\",\n    space = \"free_y\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/facet-grid-options-space-y-1.png){width=1000}\n:::\n:::\n\n\n## Your Turn!\n\n::: question\n**Create the following facet from the `diamonds` data**.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/exercise-facets-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Your Turn!\n\n::: question\n<b style=\"color:#5DB699;\">Bonus: Create this bloody-dark version.</b>\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/exercise-facets-bonus-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6,7,8,9,10,11,12|8,9,10\"}\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-start-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"13,14,15,16,17\"}\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet (Dark Theme Bonus)\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"19,20,21,22\"}\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3,\n    color = \"white\"\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  ) +\n  theme_dark(\n    base_size = 14,\n    base_family = \"Roboto Condensed\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-dark-1.png){width=1000}\n:::\n:::\n\n\n# Scales\n\n\n\n\n\n## Scales\n\n<br>\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>= translate between variable ranges and property ranges</b><br><br>\n\n::: incremental\n-   feels-like temperature  ⇄  x\n-   reported bike shares  ⇄  y\n-   season  ⇄  color\n-   year  ⇄  shape\n-   ...\n:::\n\n## Scales\n\nThe `scale_*()` components control the properties of all the<br><b class='simple-highlight-ylw'>aesthetic dimensions mapped to the data.</b>\n\n<br>Consequently, there are `scale_*()` functions for all aesthetics such as:\n\n-   **positions** via `scale_x_*()` and `scale_y_*()`\n\n-   **colors** via `scale_color_*()` and `scale_fill_*()`\n\n-   **sizes** via `scale_size_*()` and `scale_radius_*()`\n\n-   **shapes** via `scale_shape_*()` and `scale_linetype_*()`\n\n-   **transparency** via `scale_alpha_*()`\n\n## Scales\n\nThe `scale_*()` components control the properties of all the<br><b class='simple-highlight-ylw'>aesthetic dimensions mapped to the data.</b>\n\n<br>The extensions (`*`) can be filled by e.g.:\n\n-   `continuous()`, `discrete()`, `reverse()`, `log10()`, `sqrt()`, `date()` for positions\n\n-   `continuous()`, `discrete()`, `manual()`, `gradient()`, `gradient2()`, `brewer()` for colors\n\n-   `continuous()`, `discrete()`, `manual()`, `ordinal()`, `area()`, `date()` for sizes\n\n-   `continuous()`, `discrete()`, `manual()`, `ordinal()` for shapes\n\n-   `continuous()`, `discrete()`, `manual()`, `ordinal()`, `date()` for transparency\n\n------------------------------------------------------------------------\n\n![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/concepts/continuous_discrete.png){fig-size=\"120%\" fig-align=\"center\" fig-alt=\"Allison Horsts illustration ofthe correct use of continuous versus discrete; however, in {ggplot2} these are interpeted in a different way: as quantitative and qualitative.\"}\n\n## Continuous vs. Discrete in {ggplot2}\n\n::: {layout-ncol=\"2\"}\n## Continuous:<br>quantitative or numerical data\n\n-   height\n-   weight\n-   age\n-   counts\n\n## Discrete:<br>qualitative or categorical data\n\n-   species\n-   sex\n-   study sites\n-   age group\n:::\n\n## Continuous vs. Discrete in {ggplot2}\n\n::: {layout-ncol=\"2\"}\n## Continuous:<br>quantitative or numerical data\n\n-   height (continuous)\n-   weight (continuous)\n-   age (continuous or discrete)\n-   counts (discrete)\n\n## Discrete:<br>qualitative or categorical data\n\n-   species (nominal)\n-   sex (nominal)\n-   study site (nominal or ordinal)\n-   age group (ordinal)\n:::\n\n## Aesthetics + Scales\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-default-invisible-1.png){width=1000}\n:::\n:::\n\n\n## Aesthetics + Scales\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,7,8,9|7,8,9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous() +\n  scale_color_discrete()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-default-1.png){width=1000}\n:::\n:::\n\n\n## Scales\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_continuous() +\n  scale_color_discrete()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-overwrite-1-1.png){width=1000}\n:::\n:::\n\n\n## Scales\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_discrete()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-overwrite-2-1.png){width=1000}\n:::\n:::\n\n\n## Scales\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-overwrite-3-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10|9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +  \n  geom_point() +\n  scale_y_continuous(\n    trans = \"log10\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-trans-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9|8\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\"\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-name-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = seq(0, 60000, by = 15000)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-breaks-seq-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-breaks-short-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = c(0, 2:12*2500, 40000, 50000)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-breaks-irregular-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4*15000,\n    labels = 0:4*15\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-labels-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4*15000,\n    labels = paste(0:4*15000, \"bikes\")\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-labels-paste-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    limits = c(NA, 60000)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-limits-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    expand = c(0, 0)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-expand.no-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = -1:5*15000,\n    expand = c(.5, .5) ## c(add, mult)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-expand-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = -1:5*15000,\n    expand = expansion(add = 2000)\n  ) \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-expand-add-explicit-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_continuous\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    guide = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-continuous-guide-none-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_date\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,10|7,8,9,10|9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"4 months\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-date-breaks-months-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_date\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"20 weeks\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-date-breaks-weeks-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_date\\` with \\`strftime()\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"6 months\",\n    date_labels = \"%Y/%m/%d\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-date-labels-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_date\\` with \\`strftime()\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"6 months\",\n    date_labels = \"%b '%y\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-date-labels-special-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,6,9|6,7,8,9|7,8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Period\",\n    labels = c(\"Dec-Feb\", \"Mar-May\", \"Jun-Aug\", \"Sep-Nov\")\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-discrete-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_x\\|y_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Season\",\n    expand = c(.5, 0) ## add, mult\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-discrete-expand-1.png){width=1000}\n:::\n:::\n\n\n## Discrete or Continuous?\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,5,6,7\"}\nggplot(\n    bikes,\n    aes(x = as.numeric(season), y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-fake-discrete-visible-1.png){width=1000}\n:::\n:::\n\n\n## Discrete or Continuous?\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11,12,13|11|12\"}\nggplot(\n    bikes,\n    aes(x = as.numeric(season),\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-fake-discrete-1.png){width=1000}\n:::\n:::\n\n\n## Discrete or Continuous?\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = as.numeric(season) + \n            as.numeric(season) / 8,\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-xy-fake-discrete-shift-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_color\\|fill_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,10|7,8,9,10|8,9\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#69b0d4\", \"#00CB79\", \"#F7B01B\", \"#a78f5f\")\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-discrete-type-vector-1.png){width=1000}\n:::\n:::\n\n\n## Inspect Assigned Colors\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1|12|14\"}\ng <- ggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#3ca7d9\", \"#1ec99b\", \"#F7B01B\", \"#bb7e8f\")\n  )\n\ngb <- ggplot_build(g)\n\ngb$data[[1]][c(1:5, 200:205, 400:405), 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     colour     x     y PANEL group\n1   #3ca7d9 16439  6830     1     1\n2   #3ca7d9 16439  2404     1     1\n3   #3ca7d9 16440 14763     1     1\n4   #3ca7d9 16440  5609     1     1\n5   #3ca7d9 16441 14501     1     1\n200 #1ec99b 16538  8830     1     2\n201 #1ec99b 16539 24019     1     2\n202 #1ec99b 16539 10500     1     2\n203 #1ec99b 16540 25640     1     2\n204 #1ec99b 16540 11830     1     2\n205 #1ec99b 16541 22216     1     2\n400 #F7B01B 16638 12079     1     3\n401 #F7B01B 16639 26646     1     3\n402 #F7B01B 16639 12446     1     3\n403 #F7B01B 16640 11312     1     3\n404 #F7B01B 16640  4722     1     3\n405 #F7B01B 16641 22748     1     3\n```\n:::\n:::\n\n\n## \\`scale_color\\|fill_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4,5,6|1,16\"}\nmy_colors <- c(\n  `winter` = \"#3c89d9\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `autumn` = \"#a26e7c\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-discrete-type-vector-named-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_color\\|fill_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,5|1,16\"}\nmy_colors_alphabetical <- c(\n  `autumn` = \"#a26e7c\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `winter` = \"#3c89d9\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors_alphabetical\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-discrete-type-vector-named-shuffled-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_color\\|fill_discrete\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1|11,12,13\"}\nlibrary(RColorBrewer)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = brewer.pal(\n      n = 4, name = \"Dark2\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-discrete-type-palette-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_color\\|fill_manual\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"4,9,10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  scale_color_manual(\n    name = \"Season:\",\n    values = brewer.pal(n = 6, name = \"Pastel1\"),\n    na.value = \"black\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-manual-na-1.png){width=1000}\n:::\n:::\n\n\n## \\`scale_color\\|fill_carto_d\\`\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10\"}\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  rcartocolor::scale_color_carto_d(\n    name = \"Season:\",\n    palette = \"Pastel\",\n    na.value = \"black\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scales-color-discrete-carto-1.png){width=1000}\n:::\n:::\n\n\n## Your Turn!\n\n::: question\n**Modify our diamonds facet like this:**\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/exercise-scales-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1|10|20\"}\nfacet <-\n  ggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    aes(color = cut),\n    method = \"lm\",\n    se = FALSE\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )\n\nfacet\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-store-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = c(\"$0\", \"$10,000\", \"$20,000\", \"$30,000\")\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-xy-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10,11,12,13,14\"}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = paste0(\n      \"$\", format(\n        0:3*10000, \n        big.mark = \",\", \n        trim = TRUE\n      )\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-y-paste-format-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10,11,12,13\"}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = function(y) paste0(\n      \"$\", format(\n        y, big.mark = \",\",\n        trim = TRUE\n      )\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-y-function-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-y-dollar-format-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10,11,12,13\"}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  ) +\n  scale_color_brewer(\n    palette = \"Set2\",\n    guide = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-color-1.png){width=1000}\n:::\n:::\n\n\n## Diamonds Facet\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"13,14,15\"}\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  ) +\n  scale_color_brewer(\n    palette = \"Set2\"\n  ) +\n  theme(\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/diamonds-facet-scales-no-legend-1.png){width=1000}\n:::\n:::\n\n\n# Coordinate Systems\n\n## Coordinate Systems\n\n<br>\n\n<b class='simple-highlight-grn' style='font-size:2.6rem;'>= interpret the position aesthetics</b><br><br>\n\n::: incremental\n-   **linear coordinate systems:** preserve the geometrical shapes\n    -   `coord_cartesian()`\n    -   `coord_fixed()`\n    -   `coord_flip()`\n-   **non-linear coordinate systems:** likely change the geometrical shapes\n    -   `coord_polar()`\n    -   `coord_map()` and `coord_sf()`\n    -   `coord_trans()`\n:::\n\n## Cartesian Coordinate System\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-1.png){width=1000}\n:::\n:::\n\n\n## Cartesian Coordinate System\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-zoom-1.png){width=1000}\n:::\n:::\n\n\n## Changing Limits\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-ylim-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_y_continuous(\n    limits = c(NA, 15000)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/scale-y-limits-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Clipping\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000),\n    clip = \"off\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-clip-1.png){width=1000}\n:::\n:::\n\n\n## Clipping\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,3|6,7,8,9,10|12\"}\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  geom_text(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-clip-text-1.png){width=1000}\n:::\n:::\n\n\n## ... or better use {ggrepel}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  ggrepel::geom_text_repel(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-clip-text-repel-1.png){width=1000}\n:::\n:::\n\n\n## Remove All Padding\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7|8\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  coord_cartesian(\n    expand = FALSE,\n    clip = \"off\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-expand-off-clip-1.png){width=1000}\n:::\n:::\n\n\n## Fixed Coordinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = temp)\n  ) +\n  geom_point() +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-fixed-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp_feel, y = temp)\n  ) +\n  geom_point() +\n  coord_fixed(ratio = 4)\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-fixed-custom-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n## Flipped Coordinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-comp-flip-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-flip-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Flipped Coordinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,6\"}\nggplot(\n    bikes,\n    aes(y = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-switch-x-y-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3,6\"}\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-flip-again-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Reminder: Sort Your Bars!\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3|2\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(y = fct_infreq(weather_type))\n  ) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/forcats-sort-infreq-1.png){width=1000}\n:::\n:::\n\n\n## Reminder: Sort Your Bars!\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(y = fct_rev(\n      fct_infreq(weather_type)\n    ))\n  ) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/forcats-sort-infreq-rev-1.png){width=1000}\n:::\n:::\n\n\n## Circular Corrdinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-comp-polar-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n## Circular Cordinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar(width = 1) +\n  coord_polar()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-coxcomb-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6,7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar(width = 1) +\n  coord_cartesian()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-comp-polar-no-padding-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Circular Corrdinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"x\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-theta-x-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"y\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-theta-y-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Circular Corrdinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1, fill = weather_type)\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_polar(theta = \"y\") \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-pie-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1, fill = weather_type)\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_cartesian() \n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-comp-polar-stacked-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Circular Corrdinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,6,7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1,\n        fill = fct_rev(fct_infreq(weather_type)))\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_polar(theta = \"y\") +\n  scale_fill_discrete(name = NULL)\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-polar-pie-sorted-1.png){width=1000}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4,6,7\"}\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1,\n        fill = fct_rev(fct_infreq(weather_type)))\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_cartesian() +\n  scale_fill_discrete(name = NULL)\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-cartesian-comp-polar-stacked-sorted-1.png){width=1000}\n:::\n:::\n\n:::\n\n## Transform a Coordinate System\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  coord_trans(y = \"log10\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-trans-log-1.png){width=1000}\n:::\n:::\n\n\n## Transform a Coordinate System\n\n::: {layout-ncol=\"2\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  coord_trans(y = \"log10\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/trans-log-via-coord-1.png){width=1000}\n:::\n:::\n\n\n::: fragment\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/trans-log-via-scale-1.png){width=1000}\n:::\n:::\n\n:::\n:::\n\n## <b style='color:#663399;'>Recap</b>\n\n::: recap\n::: incremental\n-   **`facet_*()`** functions allow to create small multiples\n-   **`scale_*()`** functions translate between `aes`thetics and properties\n-   use **`*_continuous()`** for numerical data\n-   ... and **`*_discrete()`** for categorical data\n-   use **`scale_color|fill_*()`** to customize data-related colors\n-   **`coord_*()`** functions interpret the positional aesthetics\n    -   e.g. create polar plots or work with spatial projections \n-   be careful when adjusting axis limits:\n    -   `scale_*_continuous(limits)` removes the data outside the range\n    -   `coord_*(*lim)` keeps the data and zooms into the range\n:::\n:::\n\n# Exercises\n\n## Exercise 1\n\n::: question\n-   Have a look at the following visualization of the cumulative time that cosmo- and astronauts have spent in outer space. The data also contains information on the year of their first and last travel, respectively.\n-   Together with your group, discuss which layers and modifications are needed to create such a chart with `{ggplot2}`.\n-   Note down the aesthetics, geometries, and scales used for each element of this graphic.\n-   What is the coordinate system? Have any adjustments been made?\n-   Which theme was used and how was it modified?\n:::\n\n##  {background-image=\"img/exercises/astronaut-viz-detail.png\" background-position=\"center\" background-size=\"61%\"}\n\n##  {background-image=\"img/exercises/exercise-what-now.png\" background-position=\"center\" background-size=\"65%\"}\n\n## Exercise 2\n\n::: question\n-   Create a circular lollipop plot of reported bike shares per season.\n-   The data is not in the right format as there are no totals.<br>How can you solve it?\n-   Remove all legend elements (with a single line of code).\n-   How can you add the labels next to the starting point of each lollipop?\n-   How could you add a baseline?\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-1-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-2-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-3-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-5-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-7-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n##  {background-image=\"img/exercises/concepts-pt2-exercise-2-8-1.png\" background-position=\"center\" background-size=\"37%\"}\n\n::: footer\n:::\n\n\n##  {background-image=\"img/exercises/exercise-what-now.png\" background-position=\"center\" background-size=\"65%\"}\n\n\n\n# Appendix\n\n\n\n## Spatial Coordinate (Reference) Systems\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3\"}\ncountries <- rnaturalearth::ne_countries(\n  returnclass = \"sf\"\n)\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-1.png){width=1000}\n:::\n:::\n\n\n## Spatial Coordinate (Reference) Systems\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8,9,10\"}\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-mollweide-1.png){width=1000}\n:::\n:::\n\n\n## Spatial Coordinate (Reference) Systems\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-bonne-1.png){width=1000}\n:::\n:::\n\n\n## Spatial Coordinate (Reference) Systems\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\noceans <- rnaturalearth::ne_download(\n  category = \"physical\", type = \"ocean\", returnclass = \"sf\"\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOGR data source with driver: ESRI Shapefile \nSource: \"C:\\Users\\DataVizard\\AppData\\Local\\Temp\\RtmpuafHtE\", layer: \"ne_110m_ocean\"\nwith 2 features\nIt has 3 fields\n```\n:::\n:::\n\n\n## Spatial Coordinate (Reference) Systems\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4,5|15\"}\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\"\n  ) +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-bonne-ocean-1.png){width=1000}\n:::\n:::\n\n\n## Mapping of Visual Properties\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5,9,16\"}\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"white\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-bonne-ocean-aes-1.png){width=1000}\n:::\n:::\n\n\n## Better Borders\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1,10,12,13,14,15,16,17\"}\nborders <- rmapshaper::ms_innerlines(countries)\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"transparent\"\n  ) +\n  geom_sf(\n    data = borders,\n    fill = \"transparent\",\n    color = \"white\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_files/figure-revealjs/coord-sf-bonne-ocean-inner-1.png){width=1000}\n:::\n:::\n",
    "supporting": [
      "03_concepts_pt2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}