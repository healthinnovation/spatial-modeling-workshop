{
  "hash": "97378e4605d0fc1d7e57008008c8ff9c",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:1.75em;line-height:1.1;'>Concepts of the <code>{ggplot2}</code> Package Pt. 1:<br><span style='font-weight:500;'>Solution Exercise 2</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Cédric Scherer</a></b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 1\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Exercise 2\n\n::: question\n* Explore the TfL bike sharing data visually:<br>**create a boxplot of counts per weather type**\n    - Turn the plot into a jitter strips plot (random noise across the x axis)\n    - Combine both chart types (jittered points on top of the boxplots)\n    - <span style='color:#5DB699;'>Bonus: Sort the boxplot-jitter hybrid by median counts</span>\n    - Apply your favorite theme to the plot.\n    - Add meaningful labels.\n    - <span style='color:#5DB699;'>Bonus: Explore other chart types to visualize the distributions.</span>\n* Save the plot as a vector graphic with a decent plot size.\n:::\n\n\n\n## Import Data (if not yet)\n\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/import-data-exercise_266272d3bd574fac1aff2bf9c82d5120'}\n\n```{.r .cell-code}\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Boxplot of Counts vs. Weather Type\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-1_451b2da90c2a8b5307d5582c05b3b9cf'}\n\n```{.r .cell-code}\nggplot(\n    bikes,\n    aes(x = weather_type, y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Avoid Overlapping Axis Labels\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-2_97a572cafed16eefa0e525b6ccc9c74d'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n    bikes,\n    aes(x = count, y = weather_type)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Avoid Overlapping Axis Labels\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-3_c7b13da2ed5e970ed87e197511654b99'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Apply a Theme\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-4_9e942d34260d84e0d37429698c82e987'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4\"}\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n))\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-4-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Customize the Theme\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-5_6c9d4a9b83a682d98b693b3f7f0c831b'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8,9\"}\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n))\n\ntheme_update(\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-5-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-6_2f745319edbd46cfe6d4a8945f6fefde'}\n\n```{.r .cell-code  code-line-numbers=\"3,4\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(x = NULL, y = \"Reported bike shares\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-6-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-7_7ff04dbc046f600e3c16062dc10da780'}\n\n```{.r .cell-code  code-line-numbers=\"8,9\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = NULL, y = NULL,\n    title = \"Reported bike shares by weather type\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-7-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add Meaningful Labels\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-8_77dd4ae8d29249f3c426848fdcd0a2bd'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3,4|2|3|12\"}\ntheme_update(\n  plot.title.position = \"plot\",\n  axis.title = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-8-1.png){width=1000}\n:::\n:::\n\n\n\n## Jitter Strips of Counts per Weather Type\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-9_b6878055f85d9b70ac6f20a0b6e6d845'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7\"}\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_jitter(\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-9-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Jitter Strips of Counts per Weather Type\n\n::: {layout-ncol=2}\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-10_2322a34071879a19d072b736dfa082a3'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,9\"}\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = \"jitter\",\n    alpha = .2\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-10-1.png){width=1000}\n:::\n:::\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-11_d2c748a195a12a760242b9ac5c8d7c5c'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,9\"}\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(),\n    alpha = .2\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-11-1.png){width=1000}\n:::\n:::\n\n:::\n\n\n\n## Jitter Strips of Counts vs. Weather Type\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-12_b93a27219ba5a54ff2d242043c832bd7'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10,11\"}\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-12-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Boxplot + Jitter Strip Hybrid\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-13_03fa9bea5e0e9d7d6c6104a51a134378'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-13-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Boxplot + Jitter Strip Hybrid\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-14_e333cc0b04c9edb4dea219bd31942903'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9\"}\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-14-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Bonus: Sort Weather Types\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-15_de6a9d0a1c65be63019369937b167c08'}\n\n```{.r .cell-code  code-line-numbers=\"4,5,6\"}\nggplot(\n    bikes,\n    aes(\n      x = forcats::fct_reorder(\n        str_wrap(weather_type, 6), -count\n      ),\n      y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/concepts-pt1-exercise-2-15-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Save the Plot\n\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/concepts-pt1-exercise-2-16_3f0695db9f01a8d7e5c912a756b4d563'}\n\n```{.r .cell-code}\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex2.pdf\"),\n       width = 5, height = 6.5, device = cairo_pdf)\n```\n:::\n\n\n\n\n![](plots/02_concepts_pt1_ex2.png){fig-align=\"center\" fig-alt=\"The final plot with an aspect ratio of 5 x 7 inches.\"}\n\n:::footer\n:::\n\n\n\n# Alternative Chart Types<br>to Visualize Distributions\n\n\n\n## Let's Update our Data Set\n\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/sort-weather-type_24fb96afab3792e0182cb1761bc64cd2'}\n\n```{.r .cell-code}\nbikes <-\n  bikes %>%\n  mutate(\n    weather_type_fct = stringr::str_wrap(\n      weather_type, 6\n    ),\n    weather_type_fct = forcats::fct_reorder(\n      weather_type_fct, -count\n    )\n  )\n\nlevels(bikes$weather_type_fct)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"scattered\\nclouds\" \"broken\\nclouds\"    \"clear\"            \n[4] \"cloudy\"            \"rain\"              \"snowfall\"         \n```\n:::\n:::\n\n\n\n\n## Let's Store Our ggplot Setup\n\n\n::: {.cell hash='02_concepts_pt1_ex2_solution_cache/revealjs/store-basic-setup_618f737c6adf47fd2eb60848499b74d4'}\n\n```{.r .cell-code}\ng <-\n  ggplot(\n    bikes,\n    aes(x = weather_type_fct,\n        y = count)\n  ) +\n  ggtitle(\n    \"Reported bike shares by weather type\"\n  )\n```\n:::\n\n\n\n\n## Beeswarm Plots with {ggbeeswarm}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/boxplot-beeswarm-hybrid_a00e911d0eab44a1476f4bc944e1bf03'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9|5|6,7,8\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_beeswarm(\n    size = .3,\n    alpha = .2,\n    cex = .6\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/boxplot-beeswarm-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Beeswarm Plots with {ggbeeswarm}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/boxplot-beeswarm-hybrid-quasirandom_34983e8041250276f802ae7e0b94f6fe'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_quasirandom(\n    size = .3,\n    alpha = .2,\n    width = .3,\n    varwidth = TRUE\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/boxplot-beeswarm-hybrid-quasirandom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Sina Plots with {ggforce}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/boxplot-sina-hybrid_68eee8fffa3b8a58ad06f8915e8587cc'}\n\n```{.r .cell-code  code-line-numbers=\"5,6,7,8,9\"}\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggforce::geom_sina(\n    size = .5,\n    alpha = .2,\n    maxwidth = 1.2\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/boxplot-sina-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Barcode Strips\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/boxplot-barcode-hybrid_da7c5dafca0b0f28342c6da5894c8514'}\n\n```{.r .cell-code  code-line-numbers=\"6,7|6,7,8|6,7,8,9|6,7,8,9,10|3,|10\"}\ng +\n  geom_boxplot(\n     position = position_nudge(x = .15),\n     width = .35\n  ) +\n  geom_point(\n    shape = \"-\",\n    size = 8,\n    alpha = .1,\n    position = position_nudge(x = -.15)\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/boxplot-barcode-hybrid-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggplot_dc4944ad8c88513510aeff9dabbd87fc'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggplot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggplot-custom_8d5f4f45b1a8c17deb37082e0b8bbe0a'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5\"}\ng +\n  geom_violin(\n    scale = \"count\",\n    draw_quantiles = c(.5),\n    fill = \"grey80\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggplot-custom-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggplot-custom-2_09359639b2f0d711df6583abffc421a9'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5,6,7\"}\ng +\n  geom_violin(\n    scale = \"width\",\n    draw_quantiles = c(.5),\n    trim = FALSE,\n    bw = 250,\n    fill = \"grey80\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggplot-custom-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggdist_db434f920ef6b6e9ceba271896f7b01e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  ggdist::stat_eye()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggdist-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggdist-custom-1_c8c5edb4042ee58ed95eb7d89de4ef5d'}\n\n```{.r .cell-code  code-line-numbers=\"3,4,5\"}\ng +\n  ggdist::stat_eye(\n    .width = c(0.5, 0.95),\n    width = 1.5,\n    adjust = .33\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggdist-custom-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggdist-custom-2_14dbab5abdd8ae715403257e98f7c412'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .33\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggdist-custom-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Violin Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/violin-ggdist-custom-3_65dae901598fb16c1b41495590fc6d29'}\n\n```{.r .cell-code  code-line-numbers=\"6,7,8\"}\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .5,\n    interval_size_range = c(.4, 2.5),\n    point_size = 1.2,\n    point_color = \"white\"\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/violin-ggdist-custom-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/raincloud-ggdist-rain_fb6959b02911cf133af8fbe4aee3c742'}\n\n```{.r .cell-code  code-line-numbers=\"2,6,7,8,9,10\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    .width = 0,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/raincloud-ggdist-rain-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {ggdist}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/raincloud-ggdist-boxplot_0823c05961f268412b6b54801b46a609'}\n\n```{.r .cell-code  code-line-numbers=\"7,8,9,10\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_boxplot(\n    width = .3,\n    outlier.color = NA\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/raincloud-ggdist-boxplot-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {gghalves}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/raincloud-ggdist-rain-gghalves_ec5398d8992564111e94ff57b6652f8c'}\n\n```{.r .cell-code  code-line-numbers=\"12,13,14,15,16,17\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  )\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/raincloud-ggdist-rain-gghalves-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Raincloud Plots with {gghalves}\n\n\n::: {.cell output-location='column' hash='02_concepts_pt1_ex2_solution_cache/revealjs/raincloud-ggdist-rain-gghalves-flipped_22b537d22e1e1a74d1d8bb2c313b9503'}\n\n```{.r .cell-code  code-line-numbers=\"18\"}\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  ) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](02_concepts_pt1_ex2_solution_files/figure-revealjs/raincloud-ggdist-rain-gghalves-flipped-1.png){width=1000}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}