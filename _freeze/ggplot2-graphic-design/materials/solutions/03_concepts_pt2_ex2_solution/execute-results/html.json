{
  "hash": "14c3e7451a6fe22dc06173075f38773e",
  "result": {
    "markdown": "---\ntitle: \"Graphic Design with ggplot2\"\nsubtitle: \"<span style='font-size:1.75em;line-height:1.1;'>Concepts of the <code>{ggplot2}</code> Package Pt. 2:<br><span style='font-weight:500;'>Solution Exercise 2</span></span>\"\nauthor: \"<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Cédric Scherer</a></b> **//** rstudio::conf **//** July 2022\"\nformat:\n  revealjs:\n    theme: css/style.scss\n    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'\n    #'rstudio::conf(workshop = \"Graphic Design with ggplot2\", instructor = \"Cédric Scherer\")'\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    scrollable: false\n    hide-inactive-cursor: true\n    highlight-style: printing\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 4\n      buttons: true\n    pause: true\n    mainfont: Cabinet Grotesk\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 1\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n  fig-width: 5\n  fig-height: 6\n---\n\n\n\n## Exercise 2\n\n::: question\n* Create a circular lollipop plot of reported bike shares per season.\n  - The data is not in the right format as there are no totals.<br>How can you solve it?\n  - Remove all legend elements (with a single line of code).\n  - How can you add the labels next to the starting point of each lollipop?\n  - How could you add a baseline?\n:::\n\n\n------------------------------------------------------------------------\n\n\n\n::: {.cell layout-align=\"center\" hash='03_concepts_pt2_ex2_solution_cache/revealjs/ciruclar-lollipop-exercise_2e718df10218e7b0d4e1d3a69ab263e3'}\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/ciruclar-lollipop-exercise-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n\n## Preparation\n\n\n::: {.cell hash='03_concepts_pt2_ex2_solution_cache/revealjs/prep_7956076973a69f2a6eb021a9a4d882c7'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- stringr::str_to_title(bikes$season)\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n```\n:::\n\n\n\n\n## Lollipop Plot with Pre-Calculated Sums\n\n\n::: {.cell hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-cartesian-data_624aaa769389b62aa8bddc1553345013'}\n\n```{.r .cell-code}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 2\n  season   count\n  <fct>    <int>\n1 Winter 3520407\n2 Spring 4850236\n3 Summer 6424609\n4 Autumn 5073040\n```\n:::\n:::\n\n\n## Lollipop Plot with Pre-Calculated Sums\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-1_50b1defc4a3a2a608feaef3e28ef8fb0'}\n\n```{.r .cell-code  code-line-numbers=\"1,2,3|4,5,6,7,8\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-1-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Calculate Sums via `stat_summary()`\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-cartesian-stat_f4c9238c216a1822ab0c0a41f3b401fc'}\n\n```{.r .cell-code  code-line-numbers=\"2,3,4|5,6,7,8\"}\nggplot(bikes, aes(x = season, y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-cartesian-stat-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Calculate Sums via `stat_summary()`\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-cartesian-stat-zero_249200b1de25dd09e853cca190e190da'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(bikes, aes(x = season, y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  ) +\n  coord_cartesian(ylim = c(0, NA))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-cartesian-stat-zero-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Apply a Polar Coordinate System\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-2_a78a2f8424bbbd7d799f0ac840ff12c7'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\")\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-2-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Fix Axis Ranges\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-3_632fa808a8d043b76b24bf2c594de881'}\n\n```{.r .cell-code  code-line-numbers=\"10,11,12,13,14,15\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  )\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-3-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Remove All Theme Components\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-4_a128554eeb33f324b87ccd39c12b766e'}\n\n```{.r .cell-code  code-line-numbers=\"16\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-4-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Fix Plot Margin\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-5_cf3007ef11648fc85a01db74af69595d'}\n\n```{.r .cell-code  code-line-numbers=\"17\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-5-1.png){width=1000}\n:::\n:::\n\n\n\n## Add \"Axis\" Text\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-6_f3e311977e22f1067040b224b00b633c'}\n\n```{.r .cell-code  code-line-numbers=\"9,10,11\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-6-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Style \"Axis\" Text\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-7_efb0f6de223cf71dbe93abcc512a3e1c'}\n\n```{.r .cell-code  code-line-numbers=\"11,12\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-7-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Alternatively: Add Direct Labels\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-label-season-direct_7a5107d198c3a57227bf0c78cf2908c7'}\n\n```{.r .cell-code  code-line-numbers=\"14,15,16,17\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  geom_text(\n    aes(label = paste0(round(count / 10^6, 1), \"M\")),\n    size = 4, vjust = -1, family = \"Cabinet Grotesk\"\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-label-season-direct-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add a Baseline — *ugly but simple*\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-baseline-geom-hline_815a17e21e0ae059ada26b0a219cd697'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_hline(yintercept = 0) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-baseline-geom-hline-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add a Baseline — *nice but unusual*\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-baseline-geom-linerange_453d67c08822215bcc6528d6a604d109'}\n\n```{.r .cell-code  code-line-numbers=\"4|4,9,10,11\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_linerange(\n    xmin = .7, xmax = 4.3, y = 0\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-baseline-geom-linerange-1.png){width=1000}\n:::\n:::\n\n\n\n\n## Add a Baseline — *yeah, that's it!*\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-pt2-exercise-2-8_0b1641c71499617c68b9682c84ea68b1'}\n\n```{.r .cell-code  code-line-numbers=\"4,9,10,11,12\"}\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  annotate(\n    geom = \"linerange\",\n    xmin = .7, xmax = 4.3, y = 0\n  )  +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-pt2-exercise-2-8-1.png){width=1000}\n:::\n:::\n\n\n\n## Solution using `stat_summary()`\n\n\n::: {.cell output-location='column' hash='03_concepts_pt2_ex2_solution_cache/revealjs/concepts-exercise-lollipop-stat-summary_546a92e1c0b72c1721aa357e6fd858da'}\n\n```{.r .cell-code  code-line-numbers=\"1|2,3,4|5,6,7,8|9,10,11,12,13,14\"}\nggplot(bikes, aes(x = as.numeric(season), y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  ) +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      label = season,\n      y = 0\n    ),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  annotate(\n    geom = \"linerange\",\n    xmin = .7, xmax = 4.3, y = 0\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n```\n\n::: {.cell-output-display}\n![](03_concepts_pt2_ex2_solution_files/figure-revealjs/concepts-exercise-lollipop-stat-summary-1.png){width=1000}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}